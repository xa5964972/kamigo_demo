//實現計算器功能
//結果
var result = 0;
//顯示框中的數（預設為“0”）
var screenNum = "0";
//數的初始輸入狀態，預設為0；當按了任意運算子鍵後，數的輸入狀態變為1
var state = 0;
//防止重複按運算子鍵
var avoidRepeat = true;
//運算子鍵（預設為0--等於號）
var operator = 0;
//第一步：獲取按鍵值，並顯示在顯示框中
function command(num) {
//獲取顯示框的值
var str = String(document.form1.txt.value);
//對該值進行判斷，如果該值不為"0"，且輸入狀態0，則返回前者，否則為""(雙重三目運算)
//兩個判斷條件：1、顯示框中值是否為"0",  2、數的輸入狀態
str = (str != "0")?((state == 0)?str:""):"";
//給當前值追加字元
str = str   String(num);
//重新整理顯示
document.form1.txt.value = str;
//按了任意數字鍵後，數的輸入狀態變為0
state = 0;
//重置防止重複按鍵
avoidRepeat = true;
}
//第二步：確保輸入的數是合法的，每個數至多隻有一個小數點
function dot() {
var str = String(document.form1.txt.value);
//若該數前面未接運算子，則返回前值，否則為"0"；
str = (state == 0)?str:"0";
//Java裡String有length()方法，而JS裡String有length屬性
for(i=0;i<=str.length;i  ) {
//substr()獲取下標從i開始，個數為1個的子串
if(str.substr(i,1)==".") {
//當存在小數點時，則程式終止
return;
} 
}
//若無小數點，則在該數後面加上
str = str ".";
//重新整理顯示
document.form1.txt.value = str;
//恢復數的初始輸入狀態
state = 0;
}
//第三步：處理退格鍵
function Backspace() {
var str= String(document.form1.txt.value);
//若顯示框中數不等於"0",則返回str，否則返回""
str = (str != "0")?str:"";
//獲取子串
str = str.substr(0,str.length-1);
//若str不為"",則返回子串str，否則str="0"
str = (str != "")?str:"0";
//重新整理顯示
document.form1.txt.value = str;
}
//第四步：刪除所有
function deleteAll() {
//顯示框設為"0"
document.form1.txt.value = "0";
//恢復數的初始輸入狀態
state = 0;
//恢復運算子鍵，預設為0--等於號
operator = 0;
}
//第五步：加法
function add() {
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//更改運算子鍵，1--加號
operator = 1;
}
//第六步：減法
function subtract() {
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//2--減號
operator = 2;
}
//第七步：乘法
function multiply() {
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//3--乘號
operator = 3;
}
//第八步：除法
function divide() {
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//4--除號
operator = 4;
}
//第九步：正負號
function sign() {
//5--正負號
operator = 5;
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//0--等於號
operator = 0;
//正負號可以連續按
avoidRepeat = true;
}
//第十步：等於
function equal() {
//呼叫計算函式
calculate();
//更改數的輸入狀態
state = 1;
//0--等於號
operator = 0;
}
//第十一步：計算
function calculate() {
//獲取顯示框中的值
screenNum = Number(document.form1.txt.value);
if(avoidRepeat) { 
switch(operator){
case 1:
result = result   screenNum;
document.form1.txt.value = result;
break;
case 2:
result = result - screenNum;
document.form1.txt.value = result;
break;
case 3:
result = result * screenNum;
document.form1.txt.value = result;
break;
case 4:
if(screenNum == 0){
//設定顯示框的值
document.getElementById("txt").value="除數不能為0";
//3s後，執行清屏函式
setTimeout(clearScreen,3000);
}else{
result = result/screenNum;
document.form1.txt.value = result;
}
break;
case 5:
result = (-1)*screenNum;
document.form1.txt.value = result;
break;
case 0:
result = screenNum;
document.form1.txt.value = result;
break;
}
//當按了運算子鍵後，不能再按
avoidRepeat = false;
}
}
//第十二步：清屏函式
function clearScreen() {
document.getElementById("txt").value = "0";
}
